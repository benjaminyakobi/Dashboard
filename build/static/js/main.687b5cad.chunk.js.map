{"version":3,"sources":["initFirebase.jsx","components/contexts/AuthContext.js","components/styles/App.style.js","components/authentication/Login.js","components/authentication/Signup.js","components/table/ReadOnlyRow.js","components/table/EditableRow.js","components/table/Dashboard.js","components/routing/PrivateRoute.js","components/authentication/ForgotPassword.js","components/authentication/UpdateEmail.js","components/authentication/ChangePassword.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getDatabase","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updatedEmail","updateEmail","updatedPassword","updatePassword","Provider","gradient","keyframes","AppDiv","styled","div","LoginDivContainer","LoginDiv","AppButton","button","LoginH1","h1","LoginH2","h2","LoginInput","input","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","event","a","preventDefault","current","then","push","catch","console","log","Alert","variant","onSubmit","id","type","placeholder","ref","required","disabled","to","style","color","marginBottom","Signup","passwordConfirmRef","ReadOnlyRow","contact","handleEditClick","handleDeleteClick","fullName","address","phoneNumber","Button","size","onClick","EditableRow","addFormData","handleEditFormChange","handleCancelClick","InputGroup","FormControl","name","onChange","Dashboard","listsRef","uid","contacts","setContacts","editContactId","setEditContactId","setAddFormData","onValue","snapshot","jsonObject","val","listObject","Object","values","handleAddFormChange","fieldName","target","getAttribute","fieldValue","newFormData","formData","contactId","get","exists","entries","key","updates","update","marginTop","marginRight","updatedContact","Table","form","newContact","nanoid","newChildRef","set","map","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateEmail","promises","Promise","all","finally","defaultValue","ChangePassword","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.687b5cad.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\n  const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig)\r\n  const auth = getAuth(app)\r\n  const db = getDatabase(app)\r\n  \r\n  export { auth, db }","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../../initFirebase'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail, updatePassword } from \"firebase/auth\"\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n    // In order to use AuthContext.Provider value (i.e. AuthContext.Consumer)\r\n    // we have to export it as: useContext(AuthContext) because we're using \r\n    // Functional Components. These way is relevent ONLY for functional components\r\n    // and in class components we just use AuthContext.Consumer\r\n    // WE PASS Context INSIDE useContext -> WE GET THE VALUE OF THE Inner-Context\r\n    // Detailed explain: https://www.youtube.com/watch?v=5LrDIWkK_Bc\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function logout() {\r\n        signOut(auth)\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return sendPasswordResetEmail(auth, email)\r\n    }\r\n\r\n    function updatedEmail(email) {\r\n        return updateEmail(currentUser, email)\r\n    }\r\n\r\n    function updatedPassword(password) {\r\n        return updatePassword(currentUser, password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updatedEmail,\r\n        updatedPassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {/* if not loading (i.e. current user is loaded) -> render the children it means that we are not rendering anything\r\n            until our current user is set*/}\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nconst gradient = keyframes`\r\n    {\r\n        0% {\r\n            background-position: 0% 50%;\r\n        }\r\n        50% {\r\n            background-position: 100% 50%;\r\n        }\r\n        100% {\r\n            background-position: 0% 50%;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const AppDiv = styled.div`\r\n\tbackground: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n\tbackground-size: 400% 400%;\r\n\tanimation: ${gradient} 15s ease infinite;\r\n    min-width: 100vw; /* VW: Viewport Width */\r\n    min-height: 100vh; /* VH: Viewport Height */\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative; /* Important for centeralize vertically & horizontally */\r\n`;\r\n\r\nexport const LoginDivContainer = styled.div`\r\n    position: absolute; /*Centerelize 1 (with position: relative; in the outer container)*/\r\n    top: 50%; /*Centerelize 2 (with position: relative; in the outer container)*/\r\n    left: 50%; /*Centerelize 3 (with position: relative; in the outer container)*/\r\n    transform: translate(-50%, -50%); /*Centerelize 4 (with position: relative; in the outer container)*/\r\n    width: 300px; \r\n    height: flex; \r\n    background: linear-gradient(45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n\tbackground-size: 200% 200%;\r\n\tanimation: ${gradient} 15s ease infinite;\r\n`;\r\n\r\nexport const LoginDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const AppButton = styled.button`\r\n    border-radius: 3px;\r\n    border: 2px solid #fff;\r\n    color: #fff;\r\n    margin: 5px;\r\n    padding: 5px;    \r\n    width: 200px;\r\n    height: 50px;\r\n    background: linear-gradient(to right, #ccc, #ccc);\r\n    background-repeat: no-repeat;\r\n    background-size: 0% 100%;\r\n    transition: background-size 0.5s 0s;\r\n\r\n    &:hover{\r\n      background-size: 100% 100%;\r\n    } \r\n`;\r\n\r\nexport const LoginH1 = styled.h1`\r\n    margin-top: 2rem;\r\n    color: black;\r\n    font-family: 'Raleway',sans-serif;\r\n    font-size: 1.5rem;\r\n    font-weight: 800;\r\n    line-height: 72px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const LoginH2 = styled.h2`\r\n    margin-top: 2rem;\r\n    color: black;\r\n    font-family: 'Raleway',sans-serif;\r\n    font-size: 1.2rem;\r\n    font-weight: 800;\r\n    line-height: 72px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const LoginInput = styled.input`\r\n    padding: 5px;\r\n    margin: 5px;\r\n    width: 200px;\r\n    height: 50px;\r\n    background: transparent;\r\n    border-color: #fff;\r\n    background: linear-gradient(to right, #ccc, #ccc);\r\n    background-repeat: no-repeat;\r\n    background-size: 0% 100%;\r\n    transition: background-size 0.5s 0s;\r\n    color: black;\r\n    font-family: 'Raleway',sans-serif;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    ::placeholder {color: #fff;}\r\n\r\n    &:focus{\r\n        outline: none;\r\n        background-size: 100% 100%;\r\n    }\r\n`;\r\n\r\nexport const DashboardDivContainer = styled.div`\r\n\r\n`;\r\n\r\nexport const DashboardDiv = styled.div`\r\n\r\n`;","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AppButton, LoginDiv, LoginDivContainer, LoginH1, LoginInput } from '../styles/App.style'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        setError('')\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n            .then(() => {\r\n                setLoading(false)\r\n                history.push('/dashboard')\r\n            })\r\n            .catch(error => {\r\n                setError('Failed to log in')\r\n                setLoading(false)\r\n                console.log(error)\r\n            })\r\n    }\r\n    return (\r\n        <LoginDivContainer>\r\n            <LoginDiv><LoginH1>Log In</LoginH1></LoginDiv>\r\n            {error && <Alert variant='danger'>{error}</Alert>}\r\n\r\n            <LoginDiv>\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset id='email'>\r\n                        <LoginInput type='email' placeholder='Enter Email' ref={emailRef} required />\r\n                    </fieldset>\r\n                    <fieldset id='password'>\r\n                        <LoginInput type='password' placeholder='Enter Password' ref={passwordRef} required />\r\n                    </fieldset>\r\n                    <AppButton disabled={loading} type='submit'>Log In</AppButton>\r\n                </form>\r\n            </LoginDiv>\r\n            <br />\r\n            <LoginDiv>\r\n                <Link to='/forgot-password' style={{ color: 'white' }}>\r\n                    Forgot Password?\r\n                </Link>\r\n            </LoginDiv>\r\n            <LoginDiv>\r\n                <Link to='/signup' style={{ color: 'white', marginBottom: '2rem' }}>\r\n                    Sign Up\r\n                </Link>\r\n            </LoginDiv>\r\n        </LoginDivContainer>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AppButton, LoginDivContainer, LoginH1, LoginDiv, LoginInput } from '../styles/App.style'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value) //if the signup fails -> go to catch block\r\n            setLoading(false)\r\n            history.push('/')\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LoginDivContainer>\r\n            <LoginDiv><LoginH1>Sign Up</LoginH1></LoginDiv>\r\n            {error && <Alert variant='danger'>{error}</Alert>}\r\n            <LoginDiv>\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset id='email'>\r\n                        <LoginInput type='email' placeholder='Enter Email' ref={emailRef} required />\r\n                    </fieldset>\r\n                    <fieldset id='password'>\r\n                        <LoginInput type='password' placeholder='Enter Password' ref={passwordRef} required />\r\n                    </fieldset>\r\n                    <fieldset id='password-confirm'>\r\n                        <LoginInput type='password' placeholder='Confirm Password' ref={passwordConfirmRef} required />\r\n                    </fieldset>\r\n                    <AppButton disabled={loading} type='submit'>Sign Up</AppButton>\r\n                </form>\r\n            </LoginDiv>\r\n            <br />\r\n            <LoginDiv>\r\n                <Link to='/' style={{ color: 'white', marginBottom: '2rem' }}>Back To Login</Link>\r\n            </LoginDiv>\r\n        </LoginDivContainer>\r\n    )\r\n}","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nfunction ReadOnlyRow({ contact, handleEditClick, handleDeleteClick }) {\r\n    return (\r\n        <tr>     \r\n            <td>{contact.fullName}</td>\r\n            <td>{contact.address}</td>\r\n            <td>{contact.phoneNumber}</td>\r\n            <td>{contact.email}</td>\r\n            <td>\r\n                <Button type='button' size='sm' variant='success' onClick={(event) => handleEditClick(event, contact)}>Edit</Button>{' '}\r\n                <Button type='button' size='sm' variant='danger'  onClick={() => handleDeleteClick(contact.id)}>Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ReadOnlyRow\r\n\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { InputGroup, FormControl } from 'react-bootstrap'\r\nconst EditableRow = ({ addFormData, handleEditFormChange, handleCancelClick }) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <InputGroup size='sm'>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter a name...\"\r\n                        value={addFormData.fullName}\r\n                        onChange={handleEditFormChange} />\r\n                </InputGroup>\r\n            </td>\r\n            <td>\r\n                <InputGroup size='sm'>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter an address...\"\r\n                        value={addFormData.address}\r\n                        onChange={handleEditFormChange} />\r\n                </InputGroup>\r\n            </td>\r\n            <td>\r\n                <InputGroup size='sm'>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter a phone number...\"\r\n                        value={addFormData.phoneNumber}\r\n                        onChange={handleEditFormChange} />\r\n                </InputGroup>\r\n            </td>\r\n            <td>\r\n                <InputGroup size='sm'>\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter an email...\"\r\n                        value={addFormData.email}\r\n                        onChange={handleEditFormChange} />\r\n                </InputGroup>\r\n            </td>\r\n            <td>\r\n                <Button type='submit' size='sm' variant='success'>Save</Button> {' '}\r\n                <Button type='button' size='sm' variant='danger' onClick={handleCancelClick}>Cancel</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default EditableRow\r\n","import { nanoid } from 'nanoid'\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { db } from \"../../initFirebase\"\r\nimport { ref, push, set, update, onValue, get } from \"firebase/database\"\r\nimport { useAuth } from '../../components/contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport ReadOnlyRow from \"./ReadOnlyRow\"\r\nimport EditableRow from \"./EditableRow\"\r\nimport { Table, Button, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { LoginDiv } from '../styles/App.style'\r\n\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser, logout } = useAuth() //For firebase authentication\r\n  const [error, setError] = useState('') //For errors\r\n  const history = useHistory() //For routing between components\r\n  const listsRef = ref(db, `Lists/${currentUser.uid}`) //Getting a reference to 'Lists' in Firebase-RT-DB\r\n  const [contacts, setContacts] = useState([]) //For rendeting contacts that fetched from firebase\r\n  const [editContactId, setEditContactId] = useState(null) //For editing rows\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: '',\r\n    address: '',\r\n    phoneNumber: '',\r\n    email: ''\r\n  })\r\n\r\n\r\n  /* FIREBASE REALTIME DATABASE */\r\n  //Loading data from Firebase-Realtime-Database\r\n  useEffect(() => {\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      try {\r\n        setError('')\r\n        const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n        setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n      }\r\n      catch {\r\n        setError(\"Database is empty\")\r\n        console.log(error)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  async function handleLogout() {\r\n    setError('')\r\n    try {\r\n      await logout()\r\n      history.push('/')\r\n    } catch {\r\n      setError('Failed to log out')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  /* ADDING DATA TO FIREBASE RTDB */\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newContact = {\r\n      id: nanoid(), //Generates an id\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email\r\n    }\r\n\r\n    //Inserting new object to Firebase-RT-DB\r\n    const newChildRef = push(listsRef); //Generating new child under 'Lists'\r\n    set(newChildRef, newContact); //Setting new object into the new child (newChildRef)\r\n\r\n    onValue(listsRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n        const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n        setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n      } else {\r\n        setContacts([])\r\n        console.log('No data available')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    const fieldName = event.target.getAttribute('name')\r\n    const fieldValue = event.target.value\r\n\r\n    const newFormData = { ...addFormData }\r\n    newFormData[fieldName] = fieldValue\r\n\r\n    setAddFormData(newFormData)\r\n  }\r\n\r\n  /* EDDITING DATA IN FIREBASE RTDB */\r\n  const HandleEditFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    //Updated contact information\r\n    const updatedContact = {\r\n      id: editContactId,\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email\r\n    }\r\n\r\n    get(listsRef)\r\n      .then(snapshot => {\r\n        if (snapshot.exists()) {\r\n          const jsonObject = snapshot.val()\r\n          for (const [key, value] of Object.entries(jsonObject)) {\r\n            if (value['id'] === editContactId) {\r\n              const updates = {}\r\n              updates[key] = updatedContact //Set an updated contact\r\n              return update(listsRef, updates)\r\n            }\r\n          }\r\n        }\r\n        else { console.log('No data available') }\r\n      }).catch(error => { console.log(error) })\r\n\r\n    setEditContactId(null)\r\n  }\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    const fieldName = event.target.getAttribute('name')\r\n    const fieldValue = event.target.value\r\n\r\n    const newFormData = { ...addFormData }\r\n    newFormData[fieldName] = fieldValue\r\n\r\n    setAddFormData(newFormData)\r\n  }\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault()\r\n    setEditContactId(contact.id)\r\n\r\n    const formData = {\r\n      fullName: contact.fullName,\r\n      address: contact.address,\r\n      phoneNumber: contact.phoneNumber,\r\n      email: contact.email\r\n    }\r\n\r\n    setAddFormData(formData)\r\n  }\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null)\r\n  }\r\n\r\n  /* DELETE DATA FROM FIREBASE RTDB */\r\n  const handleDeleteClick = (contactId) => {\r\n    get(listsRef)\r\n      .then(snapshot => {\r\n        if (snapshot.exists()) {\r\n          const jsonObject = snapshot.val()\r\n          for (const [key, value] of Object.entries(jsonObject)) {\r\n            if (value['id'] === contactId) {\r\n              const updates = {}\r\n              updates[key] = null //Set to null to remove\r\n              setEditContactId(null)\r\n              return update(listsRef, updates)\r\n            }\r\n          }\r\n        }\r\n        else { console.log('No data available') }\r\n      }).catch(error => { console.log(error) })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <LoginDiv>\r\n        <Button variant='danger' style={{ marginBottom: '0.5rem', marginTop: '0.5rem', marginRight: '0.5rem' }} size='sm' onClick={handleLogout} >Logout from {currentUser.email}</Button>\r\n        <Link to='/update-email'><Button style={{ marginBottom: '0.5rem', marginTop: '0.5rem', marginRight: '0.5rem' }} size='sm'>Update Email</Button></Link>\r\n        <Link to='/update-password'><Button style={{ marginBottom: '0.5rem', marginTop: '0.5rem', marginRight: '0.5rem' }} size='sm'>Update Password</Button></Link>\r\n      </LoginDiv>\r\n      <div>\r\n        <form id='inner-form' />\r\n        <form id='outer-form' onSubmit={HandleEditFormSubmit}>\r\n          <Table size='sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <InputGroup size='sm'>\r\n                    <FormControl\r\n                      form='inner-form'\r\n                      type=\"text\"\r\n                      name=\"fullName\"\r\n                      required=\"required\"\r\n                      placeholder=\"Enter a name...\"\r\n                      onChange={handleAddFormChange} />\r\n                  </InputGroup>\r\n                </td>\r\n                <td>\r\n                  <InputGroup size='sm'>\r\n                    <FormControl\r\n                      form='inner-form'\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      required=\"required\"\r\n                      placeholder=\"Enter an address...\"\r\n                      onChange={handleAddFormChange} />\r\n                  </InputGroup>\r\n                </td>\r\n                <td>\r\n                  <InputGroup size='sm'>\r\n                    <FormControl\r\n                      form='inner-form'\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      required=\"required\"\r\n                      placeholder=\"Enter a phone number...\"\r\n                      onChange={handleAddFormChange} />\r\n                  </InputGroup>\r\n                </td>\r\n                <td>\r\n                  <InputGroup size='sm'>\r\n                    <FormControl\r\n                      form='inner-form'\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      required=\"required\"\r\n                      placeholder=\"Enter an email...\"\r\n                      onChange={handleAddFormChange} />\r\n                  </InputGroup>\r\n                </td>\r\n                <td>\r\n                  <Button form='inner-form' type=\"reset\" size='sm' variant='primary' onClick={handleAddFormSubmit}>Add</Button>\r\n                </td>\r\n              </tr>\r\n              {contacts.map((contact) =>\r\n                <Fragment key={contact.id}>\r\n                  {\r\n                    (contact.id === editContactId) ?\r\n                      <EditableRow addFormData={addFormData} handleEditFormChange={handleEditFormChange} handleCancelClick={handleCancelClick} /> :\r\n                      <ReadOnlyRow contact={contact} handleEditClick={handleEditClick} handleDeleteClick={handleDeleteClick} />\r\n                  }\r\n                </Fragment>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//Wrapper around the current route\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to='/' />\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppButton, LoginDivContainer, LoginH1, LoginInput, LoginDiv } from '../styles/App.style'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <LoginDivContainer>\r\n            <LoginDiv><LoginH1>Password Reset</LoginH1></LoginDiv>\r\n            {error && <Alert variant='danger'>{error}</Alert>}\r\n            {message && <Alert variant='info'>{message}</Alert>}\r\n            <LoginDiv>\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset id='email'>\r\n                        <LoginInput type='email' placeholder='Enter Email' ref={emailRef} required />\r\n                    </fieldset>\r\n                    <AppButton disabled={loading} type='submit'>Reset Password</AppButton>\r\n                </form>\r\n            </LoginDiv>\r\n            <br />\r\n            <LoginDiv>\r\n                <Link to='/' style={{ color: 'white' }}>Back To Login</Link>\r\n            </LoginDiv>\r\n            <LoginDiv>\r\n                <Link to='/signup' style={{ color: 'white', marginBottom: '2rem' }}>Sign Up</Link>\r\n            </LoginDiv>\r\n        </LoginDivContainer>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AppButton, LoginDiv, LoginDivContainer, LoginH2, LoginInput } from '../styles/App.style'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function UpdateEmail() {\r\n    const emailRef = useRef()\r\n    const { currentUser, updatedEmail } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updatedEmail(emailRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/dashboard')\r\n        }).catch(() => {\r\n            setError('Failed to update')\r\n        }).finally()\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <LoginDivContainer>\r\n        <LoginDiv><LoginH2>Update Email</LoginH2></LoginDiv>\r\n        {error && <Alert variant='danger'>{error}</Alert>}\r\n            <LoginDiv>\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset id='email'>\r\n                        <LoginInput type='email' ref={emailRef} placeholder='Enter Email' required defaultValue={currentUser.email} />\r\n                    </fieldset>\r\n                    <AppButton disabled={loading} type='submit'>Update Email</AppButton>\r\n                </form>\r\n            </LoginDiv>\r\n            <br/>\r\n            <LoginDiv>\r\n                <Link to='/dashboard' style={{ color: 'white', marginBottom: '2rem' }}>Cancel</Link>\r\n            </LoginDiv>\r\n        </LoginDivContainer>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AppButton, LoginDiv, LoginDivContainer, LoginH2, LoginInput } from '../styles/App.style'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function ChangePassword() {\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { updatedPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatedPassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/dashboard')\r\n        }).catch(() => {\r\n            setError('Failed to update')\r\n        }).finally()\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <LoginDivContainer>\r\n        <LoginDiv><LoginH2>Change Password</LoginH2></LoginDiv>\r\n        {error && <Alert variant='danger'>{error}</Alert>}\r\n            <LoginDiv>\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset id='password'>\r\n                        <LoginInput type='password' ref={passwordRef} placeholder='Enter New Password' />\r\n                    </fieldset>\r\n                    <fieldset id='password-confirm'>\r\n                        <LoginInput type='password' ref={passwordConfirmRef} placeholder='Confirm New Password' />\r\n                    </fieldset>\r\n                    <AppButton disabled={loading} type='submit'>Change Password</AppButton>\r\n                </form>\r\n            </LoginDiv>\r\n            <br/>\r\n            <LoginDiv>\r\n                <Link to='/dashboard' style={{ color: 'white', marginBottom: '2rem' }}>Cancel</Link>\r\n            </LoginDiv>\r\n        </LoginDivContainer>\r\n    )\r\n}","import React from 'react'\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Login from \"./authentication/Login\"\r\nimport Signup from \"./authentication/Signup\"\r\nimport Dashboard from './table/Dashboard'\r\nimport PrivateRoute from \"./routing/PrivateRoute\"\r\nimport ForgotPassword from \"./authentication/ForgotPassword\"\r\nimport UpdateEmail from \"./authentication/UpdateEmail\"\r\nimport ChangePassword from \"./authentication/ChangePassword\"\r\nimport { AppDiv } from './styles/App.style'\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n        <AppDiv>\r\n          <Router>\r\n            <AuthProvider>\r\n              <Switch>\r\n                <PrivateRoute path='/dashboard' component={Dashboard} />\r\n                <Route path='/signup' component={Signup} />\r\n                <Route exact path='/' component={Login} />\r\n                <Route path='/forgot-password' component={ForgotPassword} />\r\n                <Route path='/update-email' component={UpdateEmail} />\r\n                <Route path='/update-password' component={ChangePassword} />\r\n              </Switch>\r\n            </AuthProvider>\r\n          </Router>\r\n        </AppDiv>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}