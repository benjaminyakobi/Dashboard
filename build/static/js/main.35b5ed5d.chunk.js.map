{"version":3,"sources":["initFirebase.jsx","components/Signup.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAuth","getDatabase","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","Card","Body","className","Form","Group","id","Label","Control","type","ref","required","Button","App","listsRef","useState","contacts","setContacts","fullName","address","phoneNumber","email","addFormData","setAddFormData","useEffect","onValue","snapshot","jsonObject","val","listObject","Object","values","console","log","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","Container","style","maxWidth","map","contact","name","placeholder","onChange","onClick","newContact","nanoid","newChildRef","push","set","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35b5ed5d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBhiHbrO2qUvGDmGN3iX5u-SlpRK_EPlzU\",\r\n    authDomain: \"table-app-e64c3.firebaseapp.com\",\r\n    databaseURL: \"https://table-app-e64c3-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"table-app-e64c3\",\r\n    storageBucket: \"table-app-e64c3.appspot.com\",\r\n    messagingSenderId: \"102169979497\",\r\n    appId: \"1:102169979497:web:c8dc8170bd6ce50f4850f8\",\r\n    measurementId: \"G-6RC7ZQ1177\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig)\r\n  const auth = getAuth(app)\r\n  const db = getDatabase(app)\r\n  \r\n  export { auth, db }","import React, { useRef } from 'react'\r\nimport { Form, Button, Card, Container } from 'react-bootstrap'\r\n\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Sign Up</h2>\r\n                    <Form>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button className='w-100 mt-3' type='submit'>Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? Log In\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import \"../App.css\"\r\nimport { nanoid } from 'nanoid'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { db } from \"../initFirebase\"\r\nimport { ref, push, set, onValue } from \"firebase/database\"\r\nimport Signup from \"./Signup\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\nconst App = () => {\r\n  const listsRef = ref(db, 'Lists') //Getting a reference to 'Lists' in Firebase-RT-DB\r\n  const [contacts, setContacts] = useState([])\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: '',\r\n    address: '',\r\n    phoneNumber: '',\r\n    email: ''\r\n  })\r\n\r\n  //Loading data from Firebase-Realtime-Database\r\n  useEffect(() => {\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      try {\r\n        const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n        setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n      }\r\n      catch {\r\n        console.log(\"Database is empty\")\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    const fieldName = event.target.getAttribute('name')\r\n    const fieldValue = event.target.value\r\n\r\n    const newFormData = { ...addFormData }\r\n    newFormData[fieldName] = fieldValue\r\n\r\n    setAddFormData(newFormData)\r\n  }\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newContact = {\r\n      id: nanoid(), //Generates an id\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email\r\n    }\r\n\r\n    //Inserting new object to Firebase-RT-DB\r\n    const newChildRef = push(listsRef); //Generating new child under 'Lists'\r\n    set(newChildRef, newContact); //Setting new object into the new child (newChildRef)\r\n\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n      setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className='signup-container'>\r\n          <div className='w-100' style={{ maxWidth: '400px' }}>\r\n            <Signup />\r\n          </div>\r\n      </Container>\r\n\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Email</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) =>\r\n              <tr key={contact.id}>\r\n                <td>{contact.fullName}</td>\r\n                <td>{contact.address}</td>\r\n                <td>{contact.phoneNumber}</td>\r\n                <td>{contact.email}</td>\r\n              </tr>)}\r\n          </tbody>\r\n        </table>\r\n        <h2>Add a Contact</h2>\r\n        <form className='form-container'>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a name...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an address...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a phone number...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an email...\"\r\n            onChange={handleAddFormChange} />\r\n\r\n          <button type=\"reset\" onClick={handleAddFormSubmit}>Add</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}