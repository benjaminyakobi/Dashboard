{"version":3,"sources":["initFirebase.jsx","components/contexts/AuthContext.js","components/Signup.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getDatabase","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","useContext","error","setError","event","a","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","App","listsRef","contacts","setContacts","fullName","address","phoneNumber","addFormData","setAddFormData","onValue","snapshot","jsonObject","val","listObject","Object","values","console","log","handleAddFormChange","fieldName","target","getAttribute","fieldValue","newFormData","Container","style","maxWidth","map","contact","name","placeholder","onChange","onClick","newContact","nanoid","newChildRef","push","set","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9976082.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBhiHbrO2qUvGDmGN3iX5u-SlpRK_EPlzU\",\r\n    authDomain: \"table-app-e64c3.firebaseapp.com\",\r\n    databaseURL: \"https://table-app-e64c3-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"table-app-e64c3\",\r\n    storageBucket: \"table-app-e64c3.appspot.com\",\r\n    messagingSenderId: \"102169979497\",\r\n    appId: \"1:102169979497:web:c8dc8170bd6ce50f4850f8\",\r\n    measurementId: \"G-6RC7ZQ1177\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig)\r\n  const auth = getAuth(app)\r\n  const db = getDatabase(app)\r\n  \r\n  export { auth, db }","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../../initFirebase'\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {/* if not loading (i.e. current user is loaded) -> render the children it means that we are not rendering anything\r\n            until our current user is set*/}\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../components/contexts/AuthContext'\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value) //if the signup fails -> go to catch block\r\n        } catch{\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Sign Up</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className='w-100 mt-3' type='submit'>Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? Log In\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import \"../App.css\"\r\nimport { nanoid } from 'nanoid'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { db } from \"../initFirebase\"\r\nimport { ref, push, set, onValue } from \"firebase/database\"\r\nimport Signup from \"./Signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\n\r\nconst App = () => {\r\n  const listsRef = ref(db, 'Lists') //Getting a reference to 'Lists' in Firebase-RT-DB\r\n  const [contacts, setContacts] = useState([])\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: '',\r\n    address: '',\r\n    phoneNumber: '',\r\n    email: ''\r\n  })\r\n\r\n  //Loading data from Firebase-Realtime-Database\r\n  useEffect(() => {\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      try {\r\n        const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n        setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n      }\r\n      catch {\r\n        console.log(\"Database is empty\")\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    const fieldName = event.target.getAttribute('name')\r\n    const fieldValue = event.target.value\r\n\r\n    const newFormData = { ...addFormData }\r\n    newFormData[fieldName] = fieldValue\r\n\r\n    setAddFormData(newFormData)\r\n  }\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newContact = {\r\n      id: nanoid(), //Generates an id\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email\r\n    }\r\n\r\n    //Inserting new object to Firebase-RT-DB\r\n    const newChildRef = push(listsRef); //Generating new child under 'Lists'\r\n    set(newChildRef, newContact); //Setting new object into the new child (newChildRef)\r\n\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n      setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AuthProvider>\r\n        <Container className='signup-container'>\r\n          <div className='w-100' style={{ maxWidth: '400px' }}>\r\n            <Signup />\r\n          </div>\r\n        </Container>\r\n      </AuthProvider>\r\n      \r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Email</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) =>\r\n              <tr key={contact.id}>\r\n                <td>{contact.fullName}</td>\r\n                <td>{contact.address}</td>\r\n                <td>{contact.phoneNumber}</td>\r\n                <td>{contact.email}</td>\r\n              </tr>)}\r\n          </tbody>\r\n        </table>\r\n        <h2>Add a Contact</h2>\r\n        <form className='form-container'>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a name...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an address...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a phone number...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an email...\"\r\n            onChange={handleAddFormChange} />\r\n\r\n          <button type=\"reset\" onClick={handleAddFormSubmit}>Add</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}