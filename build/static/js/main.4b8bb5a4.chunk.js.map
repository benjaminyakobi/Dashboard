{"version":3,"sources":["initFirebase.jsx","components/contexts/AuthContext.js","components/Login.js","components/Signup.js","components/Dashboard.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateEmail.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getDatabase","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updatedEmail","updateEmail","updatedPassword","updatePassword","Provider","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","event","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Signup","passwordConfirmRef","Dashboard","listsRef","uid","contacts","setContacts","fullName","address","phoneNumber","addFormData","setAddFormData","onValue","snapshot","jsonObject","val","listObject","Object","values","console","log","handleAddFormChange","fieldName","target","getAttribute","fieldValue","newFormData","onClick","map","contact","name","placeholder","onChange","newContact","nanoid","newChildRef","set","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateEmail","promises","Promise","all","then","catch","finally","defaultValue","App","Container","style","maxWidth","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b8bb5a4.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBhiHbrO2qUvGDmGN3iX5u-SlpRK_EPlzU\",\r\n    authDomain: \"table-app-e64c3.firebaseapp.com\",\r\n    databaseURL: \"https://table-app-e64c3-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"table-app-e64c3\",\r\n    storageBucket: \"table-app-e64c3.appspot.com\",\r\n    messagingSenderId: \"102169979497\",\r\n    appId: \"1:102169979497:web:c8dc8170bd6ce50f4850f8\",\r\n    measurementId: \"G-6RC7ZQ1177\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig)\r\n  const auth = getAuth(app)\r\n  const db = getDatabase(app)\r\n  \r\n  export { auth, db }","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../../initFirebase'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail, updatePassword } from \"firebase/auth\"\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n    // In order to use AuthContext.Provider value (i.e. AuthContext.Consumer)\r\n    // we have to export it as: useContext(AuthContext) because we're using \r\n    // Functional Components. These way is relevent ONLY for functional components\r\n    // and in class components we just use AuthContext.Consumer\r\n    // WE PASS Context INSIDE useContext -> WE GET THE VALUE OF THE Inner-Context\r\n    // Detailed explain: https://www.youtube.com/watch?v=5LrDIWkK_Bc\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function logout() {\r\n        signOut(auth)\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return sendPasswordResetEmail(auth, email)\r\n    }\r\n\r\n    function updatedEmail(email) {\r\n        return updateEmail(currentUser, email)\r\n    }\r\n\r\n    function updatedPassword(password) {\r\n        return updatePassword(currentUser, password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updatedEmail,\r\n        updatedPassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {/* if not loading (i.e. current user is loaded) -> render the children it means that we are not rendering anything\r\n            until our current user is set*/}\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../components/contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value) //if the login fails -> go to catch block\r\n            history.push('/dashboard')\r\n\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Log In</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className='w-100 mt-3' type='submit'>Log In</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-3'>\r\n                        <Link to='/forgot-password'>Forgot Password?</Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Need an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../components/contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value) //if the signup fails -> go to catch block\r\n            history.push('/')\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Sign Up</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className='w-100 mt-3' type='submit'>Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? <Link to='/'>Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import \"../App.css\"\r\nimport { nanoid } from 'nanoid'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { db } from \"../initFirebase\"\r\nimport { ref, push, set, onValue } from \"firebase/database\"\r\nimport { updateCurrentUser } from \"firebase/auth\"\r\nimport { useAuth } from './contexts/AuthContext'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser, logout } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const history = useHistory()\r\n\r\n  const listsRef = ref(db, `Lists/${currentUser.uid}`) //Getting a reference to 'Lists' in Firebase-RT-DB\r\n  const [contacts, setContacts] = useState([])\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: '',\r\n    address: '',\r\n    phoneNumber: '',\r\n    email: ''\r\n  })\r\n\r\n  //Loading data from Firebase-Realtime-Database\r\n  useEffect(() => {\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      try {\r\n        const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n        setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n      }\r\n      catch {\r\n        console.log(\"Database is empty\")\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    const fieldName = event.target.getAttribute('name')\r\n    const fieldValue = event.target.value\r\n\r\n    const newFormData = { ...addFormData }\r\n    newFormData[fieldName] = fieldValue\r\n\r\n    setAddFormData(newFormData)\r\n  }\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newContact = {\r\n      id: nanoid(), //Generates an id\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email\r\n    }\r\n\r\n    //Inserting new object to Firebase-RT-DB\r\n    const newChildRef = push(listsRef); //Generating new child under 'Lists'\r\n    set(newChildRef, newContact); //Setting new object into the new child (newChildRef)\r\n\r\n    onValue(listsRef, (snapshot) => {\r\n      const jsonObject = snapshot.val() //Getting each child value under 'Lists' as a json object\r\n      const listObject = Object.values(jsonObject) //Convert a json object to a list of jsons\r\n      setContacts(listObject) //Updating state: 'contacts' using setContacts\r\n    })\r\n  }\r\n\r\n  async function handleLogout() {\r\n    setError('')\r\n    try {\r\n      await logout()\r\n      history.push('/')\r\n    } catch {\r\n      setError('Failed to log out')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body className='text-center mt-2'>\r\n          <h6>Email: {currentUser.email}</h6>\r\n          <Link to='/update-email'>Update Email/Password</Link>\r\n          <div>\r\n            <Button variant='link' onClick={handleLogout}>Log Out</Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Email</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) =>\r\n              <tr key={contact.id}>\r\n                <td>{contact.fullName}</td>\r\n                <td>{contact.address}</td>\r\n                <td>{contact.phoneNumber}</td>\r\n                <td>{contact.email}</td>\r\n              </tr>)}\r\n          </tbody>\r\n        </table>\r\n        <h2>Add a Contact</h2>\r\n        <form className='form-container'>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a name...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an address...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            required=\"required\"\r\n            placeholder=\"Enter a phone number...\"\r\n            onChange={handleAddFormChange} />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required=\"required\"\r\n            placeholder=\"Enter an email...\"\r\n            onChange={handleAddFormChange} />\r\n\r\n          <button type=\"reset\" onClick={handleAddFormSubmit}>Add</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from './contexts/AuthContext'\r\n\r\n//Wrapper around the current route\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to='/' />\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../components/contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Password Reset</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    {message && <Alert variant='info'>{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className='w-100 mt-3' type='submit'>Reset Password</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-3'>\r\n                        <Link to='/'>Login</Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Need an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../components/contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { updateEmail } from 'firebase/auth'\r\n\r\nexport default function UpdateEmail() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatedEmail, updatedPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updatedEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatedPassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/dashboard')\r\n        }).catch(() => {\r\n            setError('Failed to update')\r\n        }).finally()\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Update Email/Password</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} placeholder='Leave blank to keep the same' />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} placeholder='Leave blank to keep the same' />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className='w-100 mt-3' type='submit'>Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                <Link to='/dashboard'>Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import \"../App.css\"\r\nimport { nanoid } from 'nanoid'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { db } from \"../initFirebase\"\r\nimport { ref, push, set, onValue } from \"firebase/database\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Login from \"./Login\"\r\nimport Signup from \"./Signup\"\r\nimport Dashboard from './Dashboard'\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport UpdateEmail from \"./UpdateEmail\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Container className='signup-container'>\r\n        <div className='w-100' style={{ maxWidth: '400px' }}>\r\n          <Router>\r\n            <AuthProvider>\r\n              <Switch>\r\n                <PrivateRoute path='/dashboard' component={Dashboard} />\r\n                <Route path='/signup' component={Signup} />\r\n                <Route exact path='/' component={Login} />\r\n                <Route path='/forgot-password' component={ForgotPassword} />\r\n                <Route path='/update-email' component={UpdateEmail} />\r\n              </Switch>\r\n            </AuthProvider>\r\n          </Router>\r\n        </div>\r\n      </Container>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}